import { Component } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { UserService } from 'app/core/user/user.service';
import { EntitiesListComponent } from 'app/shared/generic-components/entities-list/entities-list.component';
import { GlobalService } from 'app/shared/services/global/global.service';
import { FuseConfirmationService } from '@fuse/services/confirmation';
import { MatSnackBar } from '@angular/material/snack-bar';

import { <%= classify(name) %> } from '../<%= dasherize(name) %>';
import { <%= classify(name) %>Service } from '../service/<%= dasherize(name) %>.service';

@Component({
  selector: 'app-<%= pluralize(dasherize(name)) %>-list',
  templateUrl: './<%= pluralize(dasherize(name)) %>-list.component.html',
  styles: [`
    ::ng-deep .search-form .mat-mdc-text-field-wrapper{
        background-color: #fff;
    }
    ::ng-deep .search-form .mat-mdc-form-field-subscript-wrapper{
        display: none;
    }
  `]
})
export class <%= pluralize(classify(name)) %>ListComponent extends EntitiesListComponent<<%= classify(name) %>>{

  columns: Array<string> = [<% for(let e in entity.fields) { %><% if(entity.fields[e].visible) { %><% if(e!=0) { %>,<% } %> '<%=entity.fields[e].name%>'<% } %><% } %>, 'actions'];

  constructor(
    protected _activatedRoute: ActivatedRoute,
    protected _router: Router,
    protected _formBuilder: FormBuilder,
    protected _globalService: GlobalService,
    protected _userService: UserService,
    protected _service: <%= classify(name) %>Service,
    protected _fuseConfirmationService: FuseConfirmationService,
    protected _matSnackBar: MatSnackBar,
  ) {
    const searchFormGroup = _formBuilder.group({
        searchString: [],
        <% for(let e in entity.fields) { %> <% if(entity.fields[e].searchable) { %>
            <%= entity.fields[e].name %>: [], // <%= entity.fields[e].code %>
          <% } %><% } %>
    });
    super(_activatedRoute, _router, _formBuilder, _globalService, _userService, _fuseConfirmationService, _matSnackBar, searchFormGroup, _service, '<%= pluralizeSpanish(label) %>', '<%= label %>');
  }

  getFileCounts(files: string): number{
    if(!files){
      return 0
    }
    return JSON.parse(files).length
  }
}


